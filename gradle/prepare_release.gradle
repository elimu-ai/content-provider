ext.prepareRelease = {
    def applicationId = android.defaultConfig.applicationId
    def versionName = android.defaultConfig.versionName

    if (versionName.indexOf("-") > -1) {
        versionName = versionName.split("-")[0]
    }

    // Prepare the release commit with the specific tag.
    String buildText = buildFile.getText()
    buildText = buildText.replaceFirst(/versionName(\s+.*)/, "versionName '$versionName'")
    buildFile.setText(buildText) //replace the build file's text
    grgit.add(patterns: ['app/build.gradle'])
    try {
        grgit.commit(message: "[gradle-release-task] prepare release $applicationId-$versionName")
    } catch (Exception e) {
        throw new GradleException("Failed to commit, error:\n $e")
    }
    try {
        grgit.tag.add {
            name = versionName
            message = "Release of $versionName"
        }
    } catch (Exception e) {
        throw new GradleException("Failed to tag the repo, error:\n $e")
    }

    // Set new version name from input parameters.
    def newVersionName
    if (project.properties.containsKey("bumpVersion")) {
        newVersionName = project.properties["bumpVersion"]
        println "Bumping the version directly (bumpVersion=$newVersionName)"
    } else if (project.properties.containsKey("bumpType")) {
        def (major, minor, patch) = versionName.tokenize('.')
        switch (bumpType) {
            case "major":
                major = major.toInteger() + 1
                minor = 0
                patch = 0
                break
            case "minor":
                minor = minor.toInteger() + 1
                break
            case "patch":
                patch = patch.toInteger() + 1
                break
        }
        newVersionName = "$major.$minor.$patch"
    } else {
        throw new GradleException('Either bumpType or bumpVersion parameters should be provided')
    }

    // Prepare for next development iteration.
    def versionCode = android.defaultConfig.versionCode
    def newVersionCode = versionCode + 1
    println "Bumping versionName from $versionName to $newVersionName"
    println "Bumping versionCode from $versionCode to $newVersionCode"
    buildText = buildFile.getText()
    buildText = buildText.replaceFirst(/versionName(\s+.*)/, "versionName '$newVersionName-SNAPSHOT'")
    buildText = buildText.replaceFirst(/versionCode(\s+.*)/, "versionCode $newVersionCode")
    buildFile.setText(buildText) //replace the build file's text
    grgit.add(patterns: ['app/build.gradle'])
    grgit.commit(message: "[gradle-release-task] prepare for next development iteration")
    println "Done!"
}